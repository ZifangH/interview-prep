771. Jewels and Stones

### My Solution ###

class Solution(object):
    def numJewelsInStones(self, J, S):
        """
        :type J: str
        :type S: str
        :rtype: int
        """
        return sum(jewels in J for jewels in S)
                  
      


804. Unique Morse Code Words

### My Solution ###

class Solution(object):
    def uniqueMorseRepresentations(self, words):
        """
        :type words: List[str]
        :rtype: int
        """
        t = ''
        l = []
        alphabet = {'a':".-", 'b':"-...", 'c':"-.-.", 'd':"-..", 'e':".", 'f':"..-.",'g':"--.",
                    'h':"....",'i':"..",'j':".---",'k':"-.-",'l':".-..",'m':"--",'n':"-.",
                    'o':"---",'p':".--.",'q':"--.-",'r':".-.",'s':"...",'t':"-",'u':"..-",
                    'v':"...-",'w':".--",'x':"-..-",'y':"-.--",'z':"--.."}
        for w in words:
            for char in w:               
                t = t + alphabet[char]
            l.append(t)
            t = ''

        return len(set(l)) 
        #Count unique values in Python list - use set

             
### Other's Solution ###

class Solution(object):
    def uniqueMorseRepresentations(self, words):
        MORSE = [".-","-...","-.-.","-..",".","..-.","--.",
                 "....","..",".---","-.-",".-..","--","-.",
                 "---",".--.","--.-",".-.","...","-","..-",
                 "...-",".--","-..-","-.--","--.."]

        seen = {"".join(MORSE[ord(c) - ord('a')] for c in word)
                for word in words}

        return len(seen)
        




832. Flipping an Image

class Solution(object):
    def flipAndInvertImage(self, A):
        """
        :type A: List[List[int]]
        :rtype: List[List[int]]
        """         
        for row in A:
            row.reverse() # reversethe row

            for i in xrange(len(row)):
                row[i] = row[i]^1  # invert the image
                            
        return A
    
    """
     for i in xrange((len(row)+1)/2):
        row[i], row[~i] = row[~i] ^ 1, row[i] ^ 1
    return A
    """
    
  
  412. Fizz Buzz
  
  class Solution(object):
    def fizzBuzz(self, n):
        """
        :type n: int
        :rtype: List[str]
        """
        li = []
        for i in range(1,n+1):
            if i%3==0 and i%5==0:
                li.append("FizzBuzz") 
            elif i%3==0:
                li.append("Fizz")
            elif i%5==0:
                li.append("Buzz")
            else:
                li.append("{}".format(i))
        return li
        
    
        """
        one-line solution
        
        return [x for x in map(lambda i : 'Fizz' * (not i%3) + 'Buzz' * (not i%5) or str(i), range(1, n+1))]
        """

        
        
  
 

